
----------- Chrome DevTools -----------
Chrome DevTools — это набор инструментов, встроенных в браузер Google Chrome, для создания и отладки сайтов. 
С их помощью можно просматривать исходный код сайта, отлаживать работу frontend: HTML, CSS и JavaScript. 
Также DevTools позволяет проверять сетевой трафик, быстродействие сайта и многое другое.

----- Как начать работу с DevTools -----
Инструмент используют инженеры по тестированию, веб-разработчики и другие специалисты. Открыть DevTools из браузера Google Chrome можно тремя способами:

1) Сочетанием горячих клавиш: 
- для Windows и Linux: [Ctrl + Shift + I] или клавиша F12; 
- для macOS: [cmd + Shift + I].
2) В контекстном меню: на странице в любом месте кликнуть правой кнопкой мыши и выбрать «Просмотреть код». Главное — не путать с «Просмотр кода страницы», эта опция покажет исходный код вне DevTools.
3) Через меню браузера: в правом верхнем углу нажать на три точки, в меню выбрать раздел «Дополнительные инструменты» и далее «Инструменты разработчика».

----- Какие вкладки есть в DevTools -----
--> Elements.
Здесь отображается весь HTML- и CSS-код открытой страницы. 
На данной вкладке можно просмотреть и внести исправления в файлы CSS и JavaScript, изменить элементы DOM (программного интерфейса (API) для HTML- и XML-документов). 
Отредактировать HTML-элементы на странице, открытой в браузере, можно, кликнув по нужному элементу правой кнопкой мыши и выбрав пункт Edit as HTML. 
Изменения можно наблюдать в режиме реального времени. Манипуляции отображаются только в браузере и не видны другим пользователям. 
Для того чтобы применить исправленное, необходимо поработать с соответствующими файлами на веб-сервере.
В свою очередь, у Elements есть несколько дополнительных вкладок для работы со стилями, параметрами и событиями элемента.

--> Console.
Консоль позволяет смотреть вывод JavaScript, а также исполнять свой код для тестирования и отладки страницы. Если на открытой странице не подгрузились какие-либо данные, например стили, шрифты или картинки, здесь отобразятся соответствующие ошибки с подробным описанием. 
Консоль превращает браузер в интерпретатор JS-кода, благодаря чему вы можете запустить на любой странице абсолютно любой скрипт (команду) на языке JavaScript, и она выполнится.
Но главным образом консоль нужна для диагностики — здесь вы сможете посмотреть ошибки, возникшие при открытии 
страницы, узнать их расположение в коде и выгрузить логи в отдельный файл.

--> Sources.
Вкладка отображает загруженные файлы из всех источников, к которым обращался сайт. 
В большей степени она используется при отладке кода, позволяет увидеть все файлы и просмотреть их содержимое. 
Sources можно использовать в качестве полноценного редактора кода, получив доступ к локальным файлам через Workspaces.

--> Network.
На вкладке отображаются сетевые запросы, который делает сайт. Как правило, ее используют при оптимизации 
скорости загрузки страницы, а также для мониторинга выполняемых запросов. 
Запросы к данным представлены в виде таблицы. Сверху расположены инструменты: очистка таблицы, включение и 
отключение записи запросов и другие. Запросы можно фильтровать по типу, статусу и другим параметрам. 
Под таблицей можно увидеть количество запросов, общее время загрузки всех данных, время загрузки DOM и ресурсов, 
участвующих в отображении текущей страницы.
Основной смысл вкладки Network в том, чтобы изучить, сколько времени уходит на загрузку каждого ресурса, выявить 
самые прожорливые процессы и оптимизировать их.

--> Performance.
Позволяет анализировать производительность страницы во время её работы. 
Работает просто: открываете вкладку, нажимаете кнопку записи, и спустя некоторое время браузер выводит вам все 
данные о работе страницы: использование памяти, выполнение скриптов, время отклика, сетевые запросы и так далее. 
Частый кейс: посмотреть, не слишком ли много оперативки и ресурсов клиентской машины подъедает страница.

На панели есть таймлайн использования сети, выполнения JavaScript и загрузки памяти. 
После первого построения таймлайнов можно найти данные о всем жизненном цикле страницы и выполнении кода.
Также можно посмотреть время исполнения отдельных частей кода и выбрать конкретный период на шкале, чтобы 
увидеть, какие процессы происходили в этот интервал. Все это позволяет проанализировать каждое событие, которое 
происходило в момент загрузки или во время взаимодействия с пользователем.

На вкладке Performance (Производительность) отображается длительность каждого события. 
Начните запись, выполните нужные действия и остановите ее.
Функция Screenshots (Скриншоты) активирована по умолчанию, поэтому каждое изменение на экране сохраняется в виде 
отдельного скриншота. С их помощью можно выбрать фрагменты записи и получить о них подробные сведения.
Еще можно моделировать характеристики сетевого соединения и проверять работу приложения в разных условиях. 
По умолчанию браузер использует настройки текущего устройства, включая параметры сети и ЦП. Это не мешает 
проверить работу сайта при медленном ЦП, слабом интернет-соединении или его отсутствии. С помощью моделирования 
можно узнать, как приложение будет работать в реальных условиях.






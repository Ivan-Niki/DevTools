
----------- Chrome DevTools -----------
Chrome DevTools — это набор инструментов, встроенных в браузер Google Chrome, для создания и отладки сайтов. 
С их помощью можно просматривать исходный код сайта, отлаживать работу frontend: HTML, CSS и JavaScript. 
Также DevTools позволяет проверять сетевой трафик, быстродействие сайта и многое другое.

----- Как начать работу с DevTools -----
Инструмент используют инженеры по тестированию, веб-разработчики и другие специалисты. Открыть DevTools из браузера Google Chrome можно тремя способами:

1) Сочетанием горячих клавиш: 
- для Windows и Linux: [Ctrl + Shift + I] или клавиша F12; 
- для macOS: [cmd + Shift + I].
2) В контекстном меню: на странице в любом месте кликнуть правой кнопкой мыши и выбрать «Просмотреть код». Главное — не путать с «Просмотр кода страницы», эта опция покажет исходный код вне DevTools.
3) Через меню браузера: в правом верхнем углу нажать на три точки, в меню выбрать раздел «Дополнительные инструменты» и далее «Инструменты разработчика».

----- Какие вкладки есть в DevTools -----
--> Elements.
Здесь отображается весь HTML- и CSS-код открытой страницы. 
На данной вкладке можно просмотреть и внести исправления в файлы CSS и JavaScript, изменить элементы DOM (программного интерфейса (API) для HTML- и XML-документов). 
Отредактировать HTML-элементы на странице, открытой в браузере, можно, кликнув по нужному элементу правой кнопкой мыши и выбрав пункт Edit as HTML. 
Изменения можно наблюдать в режиме реального времени. Манипуляции отображаются только в браузере и не видны другим пользователям. 
Для того чтобы применить исправленное, необходимо поработать с соответствующими файлами на веб-сервере.
В свою очередь, у Elements есть несколько дополнительных вкладок для работы со стилями, параметрами и событиями элемента.

--> Console.
Консоль позволяет смотреть вывод JavaScript, а также исполнять свой код для тестирования и отладки страницы. Если на открытой странице не подгрузились какие-либо данные, например стили, шрифты или картинки, здесь отобразятся соответствующие ошибки с подробным описанием. 
Консоль превращает браузер в интерпретатор JS-кода, благодаря чему вы можете запустить на любой странице абсолютно любой скрипт (команду) на языке JavaScript, и она выполнится.
Но главным образом консоль нужна для диагностики — здесь вы сможете посмотреть ошибки, возникшие при открытии 
страницы, узнать их расположение в коде и выгрузить логи в отдельный файл.

--> Sources.
Вкладка отображает загруженные файлы из всех источников, к которым обращался сайт. 
В большей степени она используется при отладке кода, позволяет увидеть все файлы и просмотреть их содержимое. 
Sources можно использовать в качестве полноценного редактора кода, получив доступ к локальным файлам через Workspaces.

--> Network.
На вкладке отображаются сетевые запросы, который делает сайт. Как правило, ее используют при оптимизации 
скорости загрузки страницы, а также для мониторинга выполняемых запросов. 
Запросы к данным представлены в виде таблицы. Сверху расположены инструменты: очистка таблицы, включение и 
отключение записи запросов и другие. Запросы можно фильтровать по типу, статусу и другим параметрам. 
Под таблицей можно увидеть количество запросов, общее время загрузки всех данных, время загрузки DOM и ресурсов, 
участвующих в отображении текущей страницы.
Основной смысл вкладки Network в том, чтобы изучить, сколько времени уходит на загрузку каждого ресурса, выявить 
самые прожорливые процессы и оптимизировать их.

--> Performance.
Позволяет анализировать производительность страницы во время её работы. 
Работает просто: открываете вкладку, нажимаете кнопку записи, и спустя некоторое время браузер выводит вам все 
данные о работе страницы: использование памяти, выполнение скриптов, время отклика, сетевые запросы и так далее. 
Частый кейс: посмотреть, не слишком ли много оперативки и ресурсов клиентской машины подъедает страница.

На панели есть таймлайн использования сети, выполнения JavaScript и загрузки памяти. 
После первого построения таймлайнов можно найти данные о всем жизненном цикле страницы и выполнении кода.
Также можно посмотреть время исполнения отдельных частей кода и выбрать конкретный период на шкале, чтобы 
увидеть, какие процессы происходили в этот интервал. Все это позволяет проанализировать каждое событие, которое 
происходило в момент загрузки или во время взаимодействия с пользователем.

На вкладке Performance (Производительность) отображается длительность каждого события. 
Начните запись, выполните нужные действия и остановите ее.
Функция Screenshots (Скриншоты) активирована по умолчанию, поэтому каждое изменение на экране сохраняется в виде 
отдельного скриншота. С их помощью можно выбрать фрагменты записи и получить о них подробные сведения.
Еще можно моделировать характеристики сетевого соединения и проверять работу приложения в разных условиях. 
По умолчанию браузер использует настройки текущего устройства, включая параметры сети и ЦП. Это не мешает 
проверить работу сайта при медленном ЦП, слабом интернет-соединении или его отсутствии. С помощью моделирования 
можно узнать, как приложение будет работать в реальных условиях.


--> Application. 
Панель, где можно быстро очистить хранилище и кэш, а также управлять базами данных.
Также здесь можно увидеть куки-файлы. Веб-приложения нужно тестировать с разными настройками файлов cookie. Основные сведения о файле cookie — Name (Название), Value (Значение) и Expiration date (Срок действия) — 
можно получить на вкладке Application (Приложение) инструментов разработчика Chrome.
Это вкладка для инспектирования и очистки всех загруженных ресурсов, в том числе IndexedDB или WebSQL баз данных,
local storage и session storage, cookie, кэша приложения, изображений, шрифтов и таблиц стилей.
Ключевые возможности вкладки Application
- Быстрая очистка хранилищ и кеша.
- Инспектирование хранилищ, баз данных и кэша, управление ими.
- Инспектирование и удаление файлов cookie.


--> Security.
На вкладке можно ознакомиться с протоколом безопасности при его наличии и просмотреть данные о сертификате безопасности, если он есть.
Инструмент используется для отладки проблем смешанного контента, проблем сертификатов и так далее.
Ключевые возможности вкладки Security:
- Окно Security Overview быстро подскажет, безопасна текущая страница или нет.
- Есть возможность ознакомиться с отдельными источниками, чтобы просмотреть соединение и детали сертификата (для безопасных источников) или узнать, какие запросы не защищены (для небезопасных источников).


--> Memory.
Ещё один хороший инструмент для контроля нагрузки кода на систему. По умолчанию показывает, сколько памяти 
потребляет страница, но можно запросить детальный отчёт по каждому элементу. 
Интересно, что в этот отчёт попадают не только элементы сайта, но и хромовские расширения — то есть можно воочию 
увидеть, сколько потребляют разные прокси, скриншоторезы и прочие адблоки.


--> Lighthouse. 
Вкладка Lighthouse - это полноценный инструмент для аналитики сайта и выявления недостатков. 
Здесь можно отслеживать следующие параметры сайта:
- Performance. Позволяет узнать скорость загрузки сайта. Итоговый показатель зависит от времени загрузки 
интерактивных элементов, шрифтов и прочего контента, а также от времени блокировки и отрисовки стилей.
- Progressive Web App. Позволяет проверить, регистрирует ли сайт Service Workers, возможна ли работа сайта 
офлайн, а также возвращает ошибку 200.
- Best Practices. Помогает проверить безопасность сайта и узнать, применяются ли современные стандарты 
веб-разработки. На показатель влияет использование устаревших API, HTTPS, корректность кодировки и многое другое.
- Accessibility. Позволяет узнать, насколько удобен сайт, как воспринимается контент и можно ли управлять 
интерфейсом и передвигаться по сайту без мыши.
- SEO. Позволяет понять, насколько соблюдаются рекомендации Google по оптимизации сайта. На показатель влияют 
использование метатегов, наличие alt у изображений, адаптивная верстка и пр.


--> Recorder.
Вкладка «Recorder» позволяет записать, воспроизвести и измерить, как быстро сайт реагирует на действия 
пользователя (например, в процессе оформления заказа). 
Чтобы начать запись, выберите вкладку «Recorder» и нажмите «Start recording».
C ее помощью можно записать, как пользователь добавил товар в корзину, перешёл в корзину, начал оформлять заказ и т.д.
Здесь же можно имитировать низкую скорость интернет-соединения и проверить, как сайт работает в этом случае. 


----------------- ПОЛЕЗНЫЕ ФУНКЦИИ DevTools ------------------
----- 1. Разработка адаптивного дизайна -----
Инструменты Chrome DevTools идеально подходят для тестирования сайта на разных экранах. 
Браузер умеет эмулировать любое устройство и любое разрешение экрана. Так что вы можете, не покидая браузера, 
взглянуть, как будет выглядеть ваше детище на планшетах, смартфонах и ПК-мониторах любого размера и с любыми органами управления.
Чтобы перейти в режим адаптивной верстки, надо кликнуть по кнопке Toggle device toolbar или нажать Ctrl + Shift + M.
Над сайтом слева появится новая панель управления с кнопкой Responsive. Кликнув на нее, вы увидите список 
доступных устройств. Выбирайте то, которое хотите эмулировать, и разметка сайта адаптируется под его разрешение.
Для упрощения процесса верстки под конкретное разрешение, нужно кликнуть по иконке в виде трех точек слева от 
кнопки запуска режима адаптивной верстки и нажать на строку Show rulers. Появится пиксельная линейка для «подгонки» сайта.
А еще тут можно делать скриншоты сайта в заданном размере. Там же, где находится линейка, есть кнопка Capture screenshot.

----- 2. Изменяем страницы без погружения в код -----
Если активировать «режим дизайна», можно редактировать сайты в Chrome без кода — как обычный текст. В
от зачем это может пригодиться:
-> Для работы — например, чтобы проверить, не «расползётся» ли макет, если загрузить туда новый контент. Это важная задача для веб-дизайнера.
-> Для развлечения — например, чтобы разыграть друзей или исправить оценки в электронном дневнике
Чтобы перейти в дизайн-мод, откройте панель Console в инструментах разработчика и запустите вот такую команду:
   document.designMode = 'on'
   
----- 3. Делаем скриншоты в высоком качестве -----
DevTools позволяет сделать скриншот сайта или веб-приложения. 
Для этого нужно открыть инструменты разработчика, нажать «Ctrl+Shift+P», написать «screenshot» и выбрать нужный вариант.
- «Capture area screenshot» — делает скриншоты определенной области экрана. 
Работает так: выбрали команду → выделили мышью нужную область для скриншота.
- «Capture full size screenshot» — делает скриншот всей страницы. В него войдут все области страницы. 
Даже те, что не помещаются на вашем экране.
- «Capture node screenshot» — делает скриншот элемента, который вы выделите на вкладке «Elements». 
Работает так: выбрали нужный элемент → нажали «Ctrl + Shift + P» и ввели команду «screenshot» → выбрали «Capture node screenshot».
- «Capture screenshot» — делает скриншот отображаемой части страницы.



